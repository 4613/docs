#format dojo_rst

Dojo 1.4 Release Notes
=======================

.. contents::
   :depth: 2

======
Dojo
======

`IO Pipeline Topics <dojo/ioPipelineTopics>`_
----------------------------------------------
Now there are topics that are published for the pipeline used to handle all IO operations. dojo.xhr, dojo.io.script and dojo.io.iframe all use the IO pipeline, so they can all publish the pipeline topics. By default, the topics are turned off. To enable them, set **djConfig.ioPublish = true**. After they are globally enabled, you can disable them for specific IO requests by setting **ioPublish: false** in the arg object you pass to dojo.xhr*, dojo.io.script.get() or dojo.io.iframe.send(). See `IO Pipeline Topics <dojo/ioPipelineTopics>`_ for more information.

`dojo.addOnLoad <dojo/addOnLoad>`_
----------------------------------

There was a dojo.require/onload fix done for Firefox browsers (see `Ticket #8976 <http://bugs.dojotoolkit.org/ticket/8976>`_).

`dojo.fieldToObject <dojo/fieldToObject>`_
-------------------------------------------
A new method in Dojo Base (part of dojo.js) that is related to dojo.formToObject(), except instead of converting a whole form to an object, it just converts one form field. Pass it a DOM Node for the field, or the ID of the form field as a string. dojo.fieldToObject returns the value encoded in a form field as as a string or an array of strings. Disabled form elements and unchecked radio and checkboxes are skipped. Multi-select elements are returned as an array of string values. See `dojo.fieldToObject <dojo/fieldToObject>`_ for more information.

`dojo.position <dojo/position>`_
-------------------------------------------
A new method in Dojo Base (part of dojo.js) that returns the beginning x/y of a DOM node's border-box as well as it's width and height.  An optional boolean parameter can be specified to change the default coordinate origin point from the viewport to the document root.

`dojo.coords <dojo/coords>`_
-------------------------------------------
This method in Dojo Base has been deprecated in Dojo 1.4.  The returned object is a mixin of `dojo.position <dojo/position>`_ and `dojo.marginBox <dojo/marginBox>`_.  Because the x/y position is based on the border-box and the (w)idth/(h)eight attributes represent the margin-box, there was considerable confusion on correctly using the returned object.  The new method `dojo.position <dojo/position>`_ performs much faster.  Users needing the l/t/w/h attributes from this method can continue to use `dojo.marginBox <dojo/marginBox>`_.

Dojo Base FX
------------

* Considerable performance increase and new API's
* made dojo._Animation public: dojo.Animation
* onEnd, beforeBegin functions are passed the node reference used in the Animation
* start: and end: properties, when using a function, are passed the node reference for the animtion
* each property can now be a function, returning either a value, or and object to pass as the value


======
Dijit
======

dijit.WidgetSet enhancements
----------------------------

dijit.WidgetSet/dijit.registry now has a .length property, and new array-like functions: toArray, some, every, and map. forEach now returns instance for chaining. forEach, some, every, filter and map now accept a 'thisObj' as second or third param (after callback)

TabContainer / AccordionContainer
---------------------------------

* tab labels / pane titles can be changed via pane.attr('title', ...)
* icons added, controlled via iconClass parameter (like for Buttons and MenuItems).   To display only icons set showTitle=false.

Tree
----

* Tree: dijit._tree.dndSource moved to dijit.tree.dndSource (since it's supposed to be used publicly)

NumberSpinner
-------------

The `NumberSpinner <dijit/form/NumberSpinner>`_ widget has changed the **required** attribute default value from true to false to more consistently allow for unspecified values within a FORM.

======
Dojox
======

dojox.image
-----------

* Significant fixes and improvements in dojox.image.Lightbox. see: `[17205] <http://bugs.dojotoolkit.org/changeset/17205>`_
  
dojox.fx
--------

* API change to dojox.fx.style functions. dojox.fx.addClass/toggleClass/removeClass now match dojo.addClass/toggleClass/removeClass API's. Documentation added, still experimental. 
* Added dojox.fx.ext-dojo.NodeList-style module, mapping dojox.fx.style functions into dojo.NodeList

dojox.layout
------------

* dojox.layout.ContentPane.attr('href', ...) now returns a dojo.Deferred rather than a dojox.layout.ContentPane.DeferredHandle custom class.   The dojo.Deferred triggers when the load completes (or errors out).

dojox.grid
----------

* dojox.grid.TreeGrid - support for collapsable rows and model-based (dijit.tree.ForestStoreModel) structure.
* compat grid is now bundled in the dojox/grid directory as a tarball archive for those who would like to continue using the deprecated (1.1) Grid

dojox.form
----------

* dojox.form._HasDropDown, dojox.form._FormSelectWidget, dojox.form.DropDownSelect - Migrated to dijit (dijit._HasDropDown, dijit.form._FormSelectWidget, dijit.form.DropDownSelect)
