#format dojo_rst

**work in progress** Current stable release notes are: `Dojo 1.5 <releasenotes/1.5>`_

Dojo 1.6 Release Notes
======================

.. contents::
   :depth: 3

===============
Browser support
===============

The following browsers are supported. If a browser is not supported, it still may work, but no effort is taken to test unsupported browsers and any specific fix for an unsupported browser is likely not to be done:

  * Firefox 3.6/4.0
  * Safari 4/Safari 5 and Chrome 5
  * IE6, IE7, IE8
  * Opera 10.50 and later (Dojo core only)

=========
Dojo Base
=========

djConfig deprecated
-------------------

The global djConfig object used to define runtime configuration options has been **deprecated**. Use {{{var dojoConfig = ... }}}. `djConfig` will be unsupported in 2.0. **additionally**, the custom attribute used when placed on the {{dojo.js}} script element has been changed to the standard HTML attribute `data-dojo-config`.  eg:

    .. code-block :: html

        <script src="dojo/dojo.js" data-dojo-config="parseOnLoad:true"></script>

    .. code-block :: javascript
 
        var dojoConfig = { parseOnLoad:true }

=========
Dojo Core
=========

Dojo Object Store
-----------------
New API, based on the W3C IndexedDB's object store API, and intended to
provide a next generation, simplified successor to Dojo Data and Dojo
Storage. This is based on discussions on the dojo-dev mailing list:
http://thread.gmane.org/gmane.comp.web.dojo.devel/12314/focus=12316.
And the `documentation <dojo/store>`_.

NodeList
--------
closest(), orphan(), and filter() enhanced to work on any selector rather than just simple selectors.

NodeList-data
-------------
New module, providing ``data`` and ``removeData`` API's to dojo.NodeList. See `NodeList-data <dojo/NodeList-data>`_

Parser deprecations
-------------------

See `ticket #11490 <http://bugs.dojotoolkit.org/ticket/11490>`_ for the full discussion and change set 

  * The `jsId` attribute has been **deprecated**, and will be unsupported in 2.0. Replace all `jsId` references with `data-dojo-id`, the behavior is identical.

  .. code-block :: html
 
     <div data-dojo-id="bar" data-dojo-type="some.Thinger">I am exported to window.bar by reference</div>

  * The `dojoType` attribute has been **deprecated**, and will be unsupported in 2.0. Replace all occurrences of `dojoType` with `data-dojo-type`, as the behavior is mostly identical, with the following caveats:

    * when using `data-dojo-type`, **all** widget properties **must** be stashed on a single attribute: `data-dojo-props` eg:

    .. code-block :: html
 
      <div data-dojo-type="dijit.form.Button" data-dojo-props="disabled:true, onClick: someNamedFunction">Click</div>

    If degradation is a concern, duplicate native attributes in `data-dojo-props` and on the node reference, as widget parameters are **no longer read from the node attributes individually**. eg:

    .. code-block :: html

       <input data-dojo-type="dijit.form.CheckBox" data-dojo-props="checked:true" checked="checked" type="checkbox'>
    
  * The `event` and `args` attributes for dojo/method and dojo/connect scripts inside widgets are **deprecated**. Use `data-dojo-event` and `data-dojo-args` respectively.

  * Existing behavior has been preserved until 2.0, there should be no backward compatibility issues between 1.6 and previous 1.x Dojo versions.


Performance boost
-----------------
Two new methods are added to Dojo core, which can be used to improve performance when using IE6 and IE7.

  * dojo.replaceClass is a public method that replaces one or more CSS classes with one or more new CSS classes.  This method modified the className property on a DOM node once rather than twice, resulting in better performance.

  * dojo._getMarginSize, a private method that returns the width and height of a node, and is a lightweight alternative to dojo.marginBox.

=====
Dijit
=====

Performance boost
-----------------
Many performance tweaks have been made to increase performance on IE6 and IE7, see `Shane's blog post <http://shaneosullivan.wordpress.com/2010/08/28/dojo-gets-a-speed-boost-on-ie6-and-ie7/>`_ for details.

watch()
-------
watch() has been implemented for widgets, to monitor changes to widget attributes.  (TODO: fill in example when feature is complete)

InlineEditBox
-------------

Can accept an object literal or string for editor and editorWrapper attributes.

_DateTimeTextBox
----------------

Can accept a string value of a date to be parsed in addition to the previous behavior of only accepting a literal Date object.

ProgressBar
-----------
- new "label" parameter for customizing the label displayed (overriding the "12%" type default label), or for using a label with an indeterminate progress bar.    Set the label via standard label="...." markup or myProgressBar.set("label", "Loading mail...") API.

TabContainer
------------
- Tab icons also appear in Menu
- Home/End keys navigate to first/last tab label

Toolbar
-------
- Home/End keys navigate to first/last button

=====
DojoX
=====

NodeList
--------
New project called dojox.NodeList, currently adding a delegate() method to NodeList allowing apps to setup a single handler on a root node rather than individual handlers on sub nodes.   For example:

.. code-block :: javascript

		dojo.query("navbar").delegate("a", "onclick", function(evt){
		     console.log("user clicked anchor ", this.node);
		});


TitleGroup
----------
New widget `TitleGroup <dojox/widget/TitleGroup>`_ in dojox.widgets, like an AccordionContainer without an predefined height (i.e., the AccordionContainer version of a TabContainer with the doLayout=false)

Dialog
------
New base class dialog and small refactoring of `dojox.widget.Dialog <dojox/widget/Dialog>`_ to use `Dialog Simple mixin <dojox/widget/DialogSimple>`_

====
Util
====

Build
-----
The build now supports auto-generation of profiles from HTML files with the new htmlFiles and htmlDir build parameters.

=========
Migration
=========

As usual dojo is API backwards-compatible with previous 1.x versions.   
