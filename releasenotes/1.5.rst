#format dojo_rst

Dojo 1.5 Release Notes (in progress)
====================================

.. contents::
   :depth: 3

=========
Dojo Core
=========

=====
Dijit
=====

_CssStateMixin
--------------

New mixin for widgets that set CSS classes on their nodes depending on hover/active/focused state, and also semantic state (checked, selected, disabled, etc.).  Most of the dijit widgets have been updated to use this mixin.   As a result, there are more selectors available than before, such as CSS classes for when the slider handle is hovered or when the increment button is depressed.

To use this mixin in custom widgets:

1. require _CssStateMixin and mix it in to the widget:
    
    dojo.require("dijit._CssStateMixin");
    
    ...
    
    dojo.declare(..., [ ..., dijit._CssStateMixin],

Note that all form widgets already inherit _CssStateMixin through _FormWidget, so they should skip this step.


2. set baseClass if not already set (form widgets already set baseClass)
    
    baseClass: "dijitSlider",

3. (If you want CSS class settings on widget subnodes, like the up/down buttons on the slider, then) set cssStateNodes attribute:
    
    cssStateNodes: {
   
       incrementButton: "dijitSliderIncrementButton",
    
       decrementButton: "dijitSliderDecrementButton",
    
       focusNode: "dijitSliderThumb"
    
    }

The left side (ex: incrementButton) is the dojoAttachPoint name, and the right side ("dijitSliderIncrementButton") is used to construct the CSS class name to apply to the node.

After the steps above, CSS classes will automatically be applied to the slider domNode (dijitSliderHover, dijitSliderFocused etc.) in addition to the specified sub nodes (this.incrementButton --> "dijitSliderIncrementButtonActive" CSS class etc.).

Note that there's no event handling code for hover/active/focus CSS needed in the widget template

Migration
~~~~~~~~~

If you have modified widget templates to dijit widgets, you will probably have some onmouseenter/onmouseleave/onfocus/onblur handlers that should be removed.

In addition, if you have custom CSS rules, there were a few changes about form widget classes with nested buttons, seen in http://bugs.dojotoolkit.org/changeset/21117:

.dijitSpinnerUpArrowHover .dijitUpArrowButton --> .dijitSpinner .dijitUpArrowButtonHover

.dijitSpinnerUpArrowActive .dijitUpArrowButton --> .dijitSpinner .dijitUpArrowButtonActive

.dijitSpinnerDownArrowHover .dijitDownArrowButton --> .dijitSpinner .dijitDownArrowButtonHover

.dijitSpinnerDownArrowActive .dijitDownArrowButton --> .dijitSpinner .dijitDownArrowButtonActive


.dijitComboButtonHover .dijitButtonContents --> .dijitComboButton .dijitButtonContentsHover

.dijitComboButtonActive .dijitButtonContents --> .dijitComboButton .dijitButtonContentsActive

.dijitComboButtonDownArrowHover .dijitDownArrowButton --> .dijitComboButton .dijitDownArrowButtonHover

.dijitComboButtonDownArrowActive .dijitDownArrowButton --> .dijitComboButton .dijitDownArrowButtonActive


Other changes occurred to CSS selectors to standardize the names, as follows:

.dijitAccordionFocused --> .dijitAccordionTitleFocused   (the accordion title is focused, not the pane contents)
.dijitAccordionTitle-hover --> .dijitAccordionTitleHover
.dijitAccordionTitle-selected --> .dijitAccordionTitleSelected

.dijitTab .closeButton --> .dijitTabCloseButton
.dijitTab .closeButton-hover --> .dijitTabCloseButtonHover   (close button for individual tab)
.dijitTabBtnDisabled --> .dijitTabDisabled   (left and right scroll buttons on tab strip)
.dijitTab .closeImage --> .dijitTabCloseIcon   (icon inside of close button)
.dijitTab .closeText --> .dijitTabCloseText      (text inside of close button, for a11y)

.dijitDialogCloseIcon-hover --> dijitDialogCloseIconHover

.dijitTreeNodeHover  --> dijitTreeRowHover   (on the TreeNode.rowNode domNode)
.dijitTreeNodeSelected --> .dijitTreeRowSelected

.dijitTitlePaneTitle-hover --> .dijitTitlePaneHover



=====
DojoX
=====

Editor
------

- Smiley plugin (existed in 1.4 but wasn't working; now it does)
